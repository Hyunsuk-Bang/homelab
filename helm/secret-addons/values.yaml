secretStores:
- name: hbang-homelab-secrets
  namespace: hbang-resources
  provider:
    infisical:
      hostAPI: https://app.infisical.com
      auth:
        universalAuthCredentials:
          clientId:
            key: clientId
            namespace: hbang-resources
            name: universal-auth-credentials
          clientSecret:
            key: clientSecret
            namespace: hbang-resources
            name: universal-auth-credentials
      secretsScope:
        projectSlug: hbang-homeloab-secrets-d-tl-n
        environmentSlug: dev
        secretsPath: /homelab
        recursive: false
        expandSecretReferences: false
- name: ejbca-postgres
  namespace: hbang-resources
  provider:
    infisical:
      hostAPI: https://app.infisical.com
      auth:
        universalAuthCredentials:
          clientId:
            key: clientId
            namespace: hbang-resources
            name: universal-auth-credentials
          clientSecret:
            key: clientSecret
            namespace: hbang-resources
            name: universal-auth-credentials
      secretsScope:
        projectSlug: hbang-homeloab-secrets-d-tl-n
        environmentSlug: dev
        secretsPath: /homelab/ejbca
        recursive: false
        expandSecretReferences: false

externalSecrets:
- name: infisical-managed-secrets
  namespace: hbang-resources
  secretStoreRef:
    kind: SecretStore
    name: hbang-homelab-secrets
  target:
    name: cloudflare-external-secret
  data:
  - secretKey: cloudflareAccountID
    remoteRef:
      key: cloudflareAccountID
  - secretKey: cloudflareAPIToken
    remoteRef:
      key: cloudflareAPIToken
  - secretKey: cloudflareTunnelName
    remoteRef:
      key: cloudflareTunnelName
- name: ejbca-postgres
  namespace: hbang-resources
  secretStoreRef:
    kind: SecretStore
    name: ejbac-postgres
  target:
    name: ejbca-postgres
  data:
  - secretKey: postgres-admin-password
    remoteRef:
      key: postgres-admin-password
  - secretKey: postgres-user-password
    remoteRef:
      key: postgres-user-password
  - secretKey: postgres-replication-password
    remoteRef:
      key: postgres-replication-password
